name: Pipelines for ECS Project
on:
  push:
   # paths:
    #  - 'Dockerfile'
    #  - 'docker/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

     # -  name: Log in to Amazon ECR
        # run: |
        #  aws ecr get-login-password --region ${{vars.AWS_REGION}} | docker login --username AWS --password-stdin ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{vars.AWS_REGION}}.amazonaws.com

     # - name: Build Docker image
     #   run: |
     #       cd app
     #       IMAGE_TAG=$(git rev-parse --short HEAD)
     #       ECR_URI=${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{vars.AWS_REGION}}.amazonaws.com/ecs-project:$IMAGE_TAG
     #       echo "ECR_URI=$ECR_URI" >> $GITHUB_ENV
     #       docker build -t $ECR_URI .
     #       docker push $ECR_URI

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        run: |
            ls
            cd infra
            pwd
            terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -var="aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" -var="aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" -var="aws_region=${{vars.AWS_REGION}}" -var="ecr_uri=${{ env.ECR_URI }}" -out=tfplan

